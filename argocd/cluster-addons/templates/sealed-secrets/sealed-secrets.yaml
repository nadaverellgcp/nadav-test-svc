# Generate the ArgoCD Application for a helm-chart-only addon, if the addon is enabled for the cluster.
{{- if and (hasKey .Values "sealedSecretsAddon") (.Values.sealedSecretsAddon.enabled) }}
{{- $addon := .Values.sealedSecretsAddon }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sealed-secrets-{{ .Values.cluster.name }}
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-admin
  source:
    chart: sealed-secrets
    # Must provide a targetRevision (chart version) for helm charts for each cluster
    targetRevision: {{ $addon.chartVersion | required "chartVersion is required" | quote}}
    repoURL:  https://bitnami-labs.github.io/sealed-secrets
    helm:
      releaseName: sealed-secrets
      valuesObject:
        # Pass values from the addon's valuesObject to the helm chart
        {{- toYaml ($addon.valuesObject | default dict) |  nindent 8 }}
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: {{ $addon.namespace | default "sealed-secrets" | quote }}
  syncPolicy:
    # Use the addon's syncPolicy if it is defined, otherwise use the cluster-default syncPolicy if defined, 
    # or finally fall back to a basic default syncPolicy.
    {{- if $addon.syncPolicy }}
    {{- $addon.syncPolicy | toYaml | nindent 4 }}
    {{- else if .Values.default.syncPolicy }}
    {{- .Values.default.syncPolicy | toYaml | nindent 4 }}
    {{- else }}
    syncOptions:
      - CreateNamespace=true
    {{- end }}
{{- end }}
