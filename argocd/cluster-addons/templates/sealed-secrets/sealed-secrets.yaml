# Load spec to a variable
{{- $addonSpecs := fromYaml (include "sealedSecrets.addonSpecs.v1" (dict "addonName" "sealedSecrets" "Values" .Values "Release" .Release)) }}
# Use the addonV1 template to render the addon spec
{{ include "addon.v1" (dict "addonName" "sealedSecrets" "Values" $addonSpecs "Release" .Release) }}

{{- define "sealedSecrets.addonSpecs.v1" }}
{{$addon := .Values.sealedSecretsAddon }}
{{- if and $addon $addon.enabled}}
{{- $sealedSecretsChart := index ($addon.valuesObject.charts | default dict) "sealedsecrets" }}
{{include "addon.v1.argoContext" .}}
{{- $destinationNamespace := index ($addon.valuesObject.destination | default dict ) "namespace" | default "kube-system" }}
sealedSecretsAddon:
  enabled: {{ $addon.enabled | default false }}
  valuesObject:
    destination:
      namespace: {{ $destinationNamespace | quote}}
    charts:
      {{- if and $sealedSecretsChart ( $sealedSecretsChart.enabled | default false ) }}
      sealedsecrets:
        repoURL: "https://bitnami-labs.github.io/sealed-secrets"
        targetRevision: {{ .Values.sealedSecretsAddon.valuesObject.charts.sealedsecrets.targetRevision | default "2.15.2" | quote }}
        name: sealed-secrets
        valuesObject:
          fullnameOverride: "sealed-secrets-controller"
          {{- if $sealedSecretsChart.valuesObject}}
          {{ toYaml $sealedSecretsChart.valuesObject |  nindent 10 }}
          {{- end}}
      {{- end }}
{{- end }}
{{- end }}
